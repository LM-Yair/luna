import { useEffect, useState } from "react";

import Head from "next/head";

import Header from "components/Header/Header";
import Loader from "components/Loader/Loader";
import Tweet from "components/Tweet/Tweet";
import { TWEET_STATE } from "CONSTANTS/TWEET_STATE";
import { filterTweetData } from "helpers/front/tweets/tweetData";
import useUser from "hooks/useUser";
import { getTweet } from "Firebase/database/actions";
import { FileViewerProvider } from "context/FileViewer";
import { ModalProvider } from "context/Modal";
import ImageViewer from "components/Modal/ImageViewer";

export async function getServerSideProps(context) {
  const { id } = context.query;
  return {
    props: {
      id,
    },
  };
}

const TweetPage = ({ id }) => {
  useUser();
  const [tweetState, setTweetState] = useState(TWEET_STATE.NULL);
  const [tweetContent, setTweetContent] = useState(TWEET_STATE.NULL);
  useEffect(() => {
    setTweetState(TWEET_STATE.LOADING);
    getTweet(id)
      .then((docSnap) => docSnap.data())
      .then((data) => {
        setTweetState(TWEET_STATE.OK);
        setTweetContent(filterTweetData(id, data));
      })
      .catch((e) => {
        console.log("ERROR_TWEET_NOT_FOUND", e);
        setTweetContent(TWEET_STATE.NULL);
        setTweetState(TWEET_STATE.ERROR);
      });
  }, []);

  if (tweetState === TWEET_STATE.NULL) {
    return (
      <section>
        <Head>
          <meta charSet="UTF-8" />
          <meta
            name="viewport"
            content="width=device-width, initial-scale=1, maximum-scale=1"
          />
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <title>Luna - Tweet</title>
        </Head>
        <Header pageName="Tweet" />
      </section>
    );
  }
  if (tweetState === TWEET_STATE.LOADING) {
    return (
      <section>
        <Head>
          <meta charSet="UTF-8" />
          <meta
            name="viewport"
            content="width=device-width, initial-scale=1, maximum-scale=1"
          />
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <title>Luna - Loading Tweet</title>
        </Head>
        <Header pageName="Tweet" />
        <div className="h-24 flex justify-center items-center">
          <Loader size={35} />
        </div>
      </section>
    );
  }
  if (tweetState === TWEET_STATE.ERROR) {
    return (
      <section>
        <Header pageName="Tweet" />
        <div className="h-24 flex justify-center items-center">
          Tweet not found {":("}
        </div>
      </section>
    );
  }
  return (
    <section>
      <Head>
        <meta charSet="UTF-8" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1"
        />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <title>Luna - Tweet</title>
      </Head>
      <Header pageName="Tweet" />
      <ModalProvider>
        <FileViewerProvider>
          <ImageViewer />
          <Tweet
            uid={tweetContent.uid}
            id={tweetContent.id}
            name={tweetContent.name}
            avatar={tweetContent.avatar}
            date={tweetContent.date}
            content={tweetContent.content}
          />
        </FileViewerProvider>
      </ModalProvider>
    </section>
  );
};

export default TweetPage;
